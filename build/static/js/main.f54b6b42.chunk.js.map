{"version":3,"sources":["components/ListText.js","components/List.js","components/ListPanel.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["ListText","_ref","id","isEdit","title","completed","todoData","setTodoData","_useState","useState","_useState2","Object","slicedToArray","editText","setEditText","react_default","a","createElement","className","onSubmit","e","preventDefault","newTodoData","map","data","editTodoData","value","onChange","target","type","concat","undefined","List","React","memo","handleClick","provided","snapshot","assign","key","draggableProps","ref","innerRef","dragHandleProps","isDragging","defaultChecked","handleCompleteChange","components_ListText","onClick","editToggle","ListPanel","react_beautiful_dnd_esm","onDragEnd","result","destination","_newTodoData$splice","splice","source","index","reorderedItem","droppableId","droppableProps","draggableId","toString","components_List","placeholder","Form","handleSubmit","setValue","name","style","flex","App","JSON","parse","localStorage","getItem","_useState3","_useState4","useEffect","setItem","stringify","useCallback","filter","components_ListPanel","Date","now","prev","toConsumableArray","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.f54b6b42.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nfunction ListText({ id, isEdit, title, completed, todoData, setTodoData }) {\n    const [editText, setEditText] = useState(title)\n\n    const onEditChange = (e) => {\n        setEditText(e.target.value)\n    }\n\n    const editTodoData = () => {\n        let newTodoData = todoData.map(data => {\n            if (data.id === id) {\n                data.title = editText;\n                data.isEdit = !data.isEdit;\n            }\n            return data;\n        });\n\n        setTodoData(newTodoData);\n    };\n\n    if (!isEdit) {\n        return (\n          <span className={`${completed ? \"line-through\" : undefined} px-2`}>{title}</span>\n        )\n      }\n      else {\n        return (\n          <form className=\"p-2\"\n            onSubmit={(e) => {\n            e.preventDefault();\n            editTodoData()}}>\n            <input className=\"rounded-md\" value={editText} onChange={onEditChange}/>\n            <button className=\"px-4\" type=\"submit\">확인</button>\n          </form>\n        )\n      }\n}\n\nexport default ListText","import React from 'react'\nimport ListText from './ListText';\n\nconst List = React.memo(({ handleClick, id, title, completed, isEdit, todoData, setTodoData, provided, snapshot}) => {\n    const handleCompleteChange = (id) => {\n        let newTodoData = todoData.map(data => {\n            if (data.id === id) {\n                data.completed = !data.completed;\n            }\n            return data;\n        })\n\n        setTodoData(newTodoData);\n    };\n\n    const editToggle = (id) => {\n        let newTodoData = todoData.map(data => {\n            if (data.id === id) {\n                data.isEdit = !data.isEdit;\n            }\n            return data;\n        })\n        setTodoData(newTodoData);\n    };\n\n    return (\n        <div key={id} {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}\n        className={`${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex item-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`}\n        >\n            <div className=\"items-center flex\">\n                <input type=\"checkbox\" defaultChecked={false} onChange={() => handleCompleteChange(id)}/>\n                <ListText id={id} title={title} isEdit={isEdit} completed={completed} todoData={todoData} setTodoData={setTodoData}/>\n            </div>\n            <div className=\"items-center\">\n                <button className=\"px-4 py-2\" onClick={()=> {editToggle(id)}}>수정</button>\n                <button className=\"px-4 py-2 float-right\" onClick={() => handleClick(id)}>삭제</button>\n                \n            </div>\n        </div>\n    )\n});\n\nexport default List","import React from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport List from './List';\n\nconst ListPanel = React.memo(({ todoData, setTodoData, handleClick }) => {\n    const handleEnd = (result) => {\n        if (!result.destination) return;\n\n        const newTodoData = todoData;\n\n        const [reorderedItem] = newTodoData.splice(result.source.index, 1);\n\n        newTodoData.splice(result.destination.index, 0, reorderedItem);\n        setTodoData(newTodoData);\n    }\n\n    return (\n        <div>\n            <DragDropContext onDragEnd={handleEnd}>\n                <Droppable droppableId=\"todo\">\n                    {(provided, snapshot) => (\n                        <div {...provided.droppableProps} ref={provided.innerRef}>\n                            {todoData.map((data, index) =>(\n                                <Draggable key={data.id} draggableId={data.id.toString()} index={index}>\n                                    {(provided, snapshot) => (\n                                        <List \n                                            handleClick={handleClick}\n                                            key={data.id}\n                                            id={data.id}\n                                            title={data.title}\n                                            completed={data.completed}\n                                            isEdit={data.isEdit}\n                                            todoData={todoData}\n                                            setTodoData={setTodoData}\n                                            provided={provided}\n                                            snapshot={snapshot}\n                                        />\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </div>\n    )\n})\n\nexport default ListPanel","import React from 'react'\n\nexport default function Form({handleSubmit, value, setValue}) {\n    const handleChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className=\"flex pt-2\">\n                <input \n                type=\"text\" \n                name=\"value\" \n                className=\"w-full px-3 py-2 mr-4 text-gray-500 border rounded shadow\"\n                placeholder=\"해야할 일을 입력하세요.\" \n                value={value}\n                onChange={handleChange}/>\n                <input \n                className=\"p-2 text-blue-400 border-2 border-blue-400 rounded hover:text-white hover:bg-blue-200\"\n                type=\"submit\" \n                value=\"입력\" \n                style={{flex: '1'}}/>\n            </form>\n        </div>\n    )\n}","import React, {useState, useCallback, useEffect} from \"react\";\nimport \"./App.css\";\nimport ListPanel from \"./components/ListPanel\";\nimport Form from \"./components/Form\";\n\nexport default function App() {\n  const [todoData, setTodoData] = useState(JSON.parse(localStorage.getItem(\"todoData\")) || []);\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"todoData\", JSON.stringify(todoData));\n  }, [todoData]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    let newTodoData = {\n      id: Date.now(),\n      title: value,\n      completed: false,\n      isEdit: false,\n    }\n\n    setTodoData(prev => [...prev, newTodoData]);\n    setValue(\"\");\n  };\n\n  const deleteAll = () => {\n    setTodoData([]);\n  }\n\n  const handleClick = useCallback((id) => {\n    let newTodoData = todoData.filter(data => data.id !== id);\n    setTodoData(newTodoData);\n  }, [todoData]);\n\n  return(\n    <div className=\"flex items-center justify-center w-screen h-screen bg-blue-100\">\n      <div className=\"w-full p-6 m-4 bg-white rounded shadow lg:w-3/4 lg:max-w-lg\"> \n        <div className=\"flex justify-between mb-3\">\n          <h1>할 일 목록</h1>\n              <button \n                className=\"p-2 text-blue-400 border-2 border-blue-400 rounded hover:text-white hover:bg-blue-200\" \n                onClick={deleteAll}>모두 지우기\n              </button>\n        </div>\n        <ListPanel handleClick={handleClick} todoData={todoData} setTodoData={setTodoData}/>\n        <Form handleSubmit={handleSubmit} value={value} setValue={setValue}/>\n      </div>\n    </div>\n  )\n  \n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}