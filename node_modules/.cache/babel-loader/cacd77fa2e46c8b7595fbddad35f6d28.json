{"ast":null,"code":"var _jsxFileName = \"/Users/jaejeongjang/Workspace/homework2/src/components/List.js\";\nimport React from 'react';\nimport ListText from './ListText';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = /*#__PURE__*/React.memo(_c = _ref => {\n  let {\n    handleClick,\n    id,\n    title,\n    completed,\n    isEdit,\n    todoData,\n    setTodoData,\n    provided,\n    snapshot\n  } = _ref;\n\n  const handleCompleteChange = id => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n\n      return data;\n    });\n    setTodoData(newTodoData);\n  };\n\n  const editToggle = id => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.isEdit = !data.isEdit;\n      }\n\n      return data;\n    });\n    setTodoData(newTodoData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.draggableProps,\n    ref: provided.innerRef,\n    ...provided.dragHandleProps,\n    className: `${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex item-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-center flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        defaultChecked: false,\n        onChange: () => handleCompleteChange(id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListText, {\n        id: id,\n        title: title,\n        isEdit: isEdit,\n        completed: completed,\n        todoData: todoData,\n        setTodoData: setTodoData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2\",\n        onClick: () => {\n          editToggle(id);\n        },\n        children: \"\\uC218\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4 py-2 float-right\",\n        onClick: () => handleClick(id),\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n});\n_c2 = List;\nexport default List;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List$React.memo\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"sources":["/Users/jaejeongjang/Workspace/homework2/src/components/List.js"],"names":["React","ListText","List","memo","handleClick","id","title","completed","isEdit","todoData","setTodoData","provided","snapshot","handleCompleteChange","newTodoData","map","data","editToggle","draggableProps","innerRef","dragHandleProps","isDragging"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,IAAI,gBAAGF,KAAK,CAACG,IAAN,MAAW,QAA6F;AAAA,MAA5F;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,EAAf;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,SAA1B;AAAqCC,IAAAA,MAArC;AAA6CC,IAAAA,QAA7C;AAAuDC,IAAAA,WAAvD;AAAoEC,IAAAA,QAApE;AAA8EC,IAAAA;AAA9E,GAA4F;;AACjH,QAAMC,oBAAoB,GAAIR,EAAD,IAAQ;AACjC,QAAIS,WAAW,GAAGL,QAAQ,CAACM,GAAT,CAAaC,IAAI,IAAI;AACnC,UAAIA,IAAI,CAACX,EAAL,KAAYA,EAAhB,EAAoB;AAChBW,QAAAA,IAAI,CAACT,SAAL,GAAiB,CAACS,IAAI,CAACT,SAAvB;AACH;;AACD,aAAOS,IAAP;AACH,KALiB,CAAlB;AAOAN,IAAAA,WAAW,CAACI,WAAD,CAAX;AACH,GATD;;AAWA,QAAMG,UAAU,GAAIZ,EAAD,IAAQ;AACvB,QAAIS,WAAW,GAAGL,QAAQ,CAACM,GAAT,CAAaC,IAAI,IAAI;AACnC,UAAIA,IAAI,CAACX,EAAL,KAAYA,EAAhB,EAAoB;AAChBW,QAAAA,IAAI,CAACR,MAAL,GAAc,CAACQ,IAAI,CAACR,MAApB;AACH;;AACD,aAAOQ,IAAP;AACH,KALiB,CAAlB;AAMAN,IAAAA,WAAW,CAACI,WAAD,CAAX;AACH,GARD;;AAUA,sBACI,oBAAkBH,QAAQ,CAACO,cAA3B;AAA2C,IAAA,GAAG,EAAEP,QAAQ,CAACQ,QAAzD;AAAA,OAAuER,QAAQ,CAACS,eAAhF;AACA,IAAA,SAAS,EAAG,GAAER,QAAQ,CAACS,UAAT,GAAsB,aAAtB,GAAsC,aAAc,kGADlE;AAAA,4BAGI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,cAAc,EAAE,KAAvC;AAA8C,QAAA,QAAQ,EAAE,MAAMR,oBAAoB,CAACR,EAAD;AAAlF;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEA,EAAd;AAAkB,QAAA,KAAK,EAAEC,KAAzB;AAAgC,QAAA,MAAM,EAAEE,MAAxC;AAAgD,QAAA,SAAS,EAAED,SAA3D;AAAsE,QAAA,QAAQ,EAAEE,QAAhF;AAA0F,QAAA,WAAW,EAAEC;AAAvG;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAOI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAE,MAAK;AAACO,UAAAA,UAAU,CAACZ,EAAD,CAAV;AAAe,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,SAAS,EAAC,uBAAlB;AAA0C,QAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,EAAD,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,KAAUA,EAAV;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CArCY,CAAb;MAAMH,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport ListText from './ListText';\n\nconst List = React.memo(({ handleClick, id, title, completed, isEdit, todoData, setTodoData, provided, snapshot}) => {\n    const handleCompleteChange = (id) => {\n        let newTodoData = todoData.map(data => {\n            if (data.id === id) {\n                data.completed = !data.completed;\n            }\n            return data;\n        })\n\n        setTodoData(newTodoData);\n    };\n\n    const editToggle = (id) => {\n        let newTodoData = todoData.map(data => {\n            if (data.id === id) {\n                data.isEdit = !data.isEdit;\n            }\n            return data;\n        })\n        setTodoData(newTodoData);\n    };\n\n    return (\n        <div key={id} {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}\n        className={`${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex item-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`}\n        >\n            <div className=\"items-center flex\">\n                <input type=\"checkbox\" defaultChecked={false} onChange={() => handleCompleteChange(id)}/>\n                <ListText id={id} title={title} isEdit={isEdit} completed={completed} todoData={todoData} setTodoData={setTodoData}/>\n            </div>\n            <div className=\"items-center\">\n                <button className=\"px-4 py-2\" onClick={()=> {editToggle(id)}}>수정</button>\n                <button className=\"px-4 py-2 float-right\" onClick={() => handleClick(id)}>삭제</button>\n                \n            </div>\n        </div>\n    )\n});\n\nexport default List"]},"metadata":{},"sourceType":"module"}