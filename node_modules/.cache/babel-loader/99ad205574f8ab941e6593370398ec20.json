{"ast":null,"code":"var _jsxFileName = \"/Users/jaejeongjang/Workspace/homework2/src/components/ListText.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListText(_ref) {\n  _s();\n\n  let {\n    id,\n    isEdit,\n    title,\n    completed,\n    todoData,\n    setTodoData\n  } = _ref;\n  const [editText, setEditText] = useState(title);\n\n  const onEditChange = e => {\n    setEditText(e.target.value);\n  };\n\n  const editTodoData = () => {\n    let newTodoData = todoData.map(data => {\n      if (data.id === id) {\n        data.title = editText;\n        data.isEdit = !data.isEdit;\n      }\n\n      return data;\n    });\n    setTodoData(newTodoData);\n  };\n\n  if (!isEdit) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `${completed ? \"line-through\" : undefined} px-2`,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"p-2\",\n      onSubmit: e => {\n        e.preventDefault();\n        editTodoData();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"rounded-md\",\n        value: editText,\n        onChange: onEditChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"px-4\",\n        type: \"submit\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this);\n  }\n}\n\n_s(ListText, \"WTThYMdh5u7PMlmNn1a1R89SWxg=\");\n\n_c = ListText;\nexport default ListText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListText\");","map":{"version":3,"sources":["/Users/jaejeongjang/Workspace/homework2/src/components/ListText.js"],"names":["React","useState","ListText","id","isEdit","title","completed","todoData","setTodoData","editText","setEditText","onEditChange","e","target","value","editTodoData","newTodoData","map","data","undefined","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,QAAT,OAA2E;AAAA;;AAAA,MAAzD;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,MAAN;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,SAArB;AAAgCC,IAAAA,QAAhC;AAA0CC,IAAAA;AAA1C,GAAyD;AACvE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACI,KAAD,CAAxC;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACvB,QAAIC,WAAW,GAAGT,QAAQ,CAACU,GAAT,CAAaC,IAAI,IAAI;AACnC,UAAIA,IAAI,CAACf,EAAL,KAAYA,EAAhB,EAAoB;AAChBe,QAAAA,IAAI,CAACb,KAAL,GAAaI,QAAb;AACAS,QAAAA,IAAI,CAACd,MAAL,GAAc,CAACc,IAAI,CAACd,MAApB;AACH;;AACD,aAAOc,IAAP;AACH,KANiB,CAAlB;AAQAV,IAAAA,WAAW,CAACQ,WAAD,CAAX;AACH,GAVD;;AAYA,MAAI,CAACZ,MAAL,EAAa;AACT,wBACE;AAAM,MAAA,SAAS,EAAG,GAAEE,SAAS,GAAG,cAAH,GAAoBa,SAAU,OAA3D;AAAA,gBAAoEd;AAApE;AAAA;AAAA;AAAA;AAAA,YADF;AAGD,GAJH,MAKO;AACH,wBACE;AAAM,MAAA,SAAS,EAAC,KAAhB;AACE,MAAA,QAAQ,EAAGO,CAAD,IAAO;AACjBA,QAAAA,CAAC,CAACQ,cAAF;AACAL,QAAAA,YAAY;AAAG,OAHjB;AAAA,8BAIE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,KAAK,EAAEN,QAArC;AAA+C,QAAA,QAAQ,EAAEE;AAAzD;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAyB,QAAA,IAAI,EAAC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACN;;GAnCQT,Q;;KAAAA,Q;AAqCT,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react'\n\nfunction ListText({ id, isEdit, title, completed, todoData, setTodoData }) {\n    const [editText, setEditText] = useState(title)\n\n    const onEditChange = (e) => {\n        setEditText(e.target.value)\n    }\n\n    const editTodoData = () => {\n        let newTodoData = todoData.map(data => {\n            if (data.id === id) {\n                data.title = editText;\n                data.isEdit = !data.isEdit;\n            }\n            return data;\n        });\n\n        setTodoData(newTodoData);\n    };\n\n    if (!isEdit) {\n        return (\n          <span className={`${completed ? \"line-through\" : undefined} px-2`}>{title}</span>\n        )\n      }\n      else {\n        return (\n          <form className=\"p-2\"\n            onSubmit={(e) => {\n            e.preventDefault();\n            editTodoData()}}>\n            <input className=\"rounded-md\" value={editText} onChange={onEditChange}/>\n            <button className=\"px-4\" type=\"submit\">확인</button>\n          </form>\n        )\n      }\n}\n\nexport default ListText"]},"metadata":{},"sourceType":"module"}