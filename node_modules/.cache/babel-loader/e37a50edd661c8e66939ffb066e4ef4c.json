{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jaejeongjang/Workspace/homework2/src/components/List.js\";\n\nimport React from 'react';\nimport ListText from './ListText';\nvar List = React.memo(function (_ref) {\n  var handleClick = _ref.handleClick,\n      id = _ref.id,\n      title = _ref.title,\n      completed = _ref.completed,\n      isEdit = _ref.isEdit,\n      todoData = _ref.todoData,\n      setTodoData = _ref.setTodoData,\n      provided = _ref.provided,\n      snapshot = _ref.snapshot;\n\n  var handleCompleteChange = function handleCompleteChange(id) {\n    var newTodoData = todoData.map(function (data) {\n      if (data.id === id) {\n        data.completed = !data.completed;\n      }\n\n      return data;\n    });\n    setTodoData(newTodoData);\n  };\n\n  var editToggle = function editToggle(id) {\n    var newTodoData = todoData.map(function (data) {\n      if (data.id === id) {\n        data.isEdit = !data.isEdit;\n      }\n\n      return data;\n    });\n    setTodoData(newTodoData);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    key: id\n  }, provided.draggableProps, {\n    ref: provided.innerRef\n  }, provided.dragHandleProps, {\n    className: \"\".concat(snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\", \" flex item-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items-center flex\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    defaultChecked: false,\n    onChange: function onChange() {\n      return handleCompleteChange(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(ListText, {\n    id: id,\n    title: title,\n    isEdit: isEdit,\n    completed: completed,\n    todoData: todoData,\n    setTodoData: setTodoData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"items-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"px-4 py-2\",\n    onClick: function onClick() {\n      editToggle(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"\\uC218\\uC815\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"px-4 py-2 float-right\",\n    onClick: function onClick() {\n      return handleClick(id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"\\uC0AD\\uC81C\")));\n});\nexport default List;","map":{"version":3,"sources":["/Users/jaejeongjang/Workspace/homework2/src/components/List.js"],"names":["React","ListText","List","memo","handleClick","id","title","completed","isEdit","todoData","setTodoData","provided","snapshot","handleCompleteChange","newTodoData","map","data","editToggle","draggableProps","innerRef","dragHandleProps","isDragging"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ListText from './ListText';\n\nconst List = React.memo(({ handleClick, id, title, completed, isEdit, todoData, setTodoData, provided, snapshot}) => {\n    const handleCompleteChange = (id) => {\n        let newTodoData = todoData.map(data => {\n            if (data.id === id) {\n                data.completed = !data.completed;\n            }\n            return data;\n        })\n\n        setTodoData(newTodoData);\n    };\n\n    const editToggle = (id) => {\n        let newTodoData = todoData.map(data => {\n            if (data.id === id) {\n                data.isEdit = !data.isEdit;\n            }\n            return data;\n        })\n        setTodoData(newTodoData);\n    };\n\n    return (\n        <div key={id} {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}\n        className={`${snapshot.isDragging ? \"bg-gray-400\" : \"bg-gray-100\"} flex item-center justify-between w-full px-4 py-1 my-2 text-gray-600 bg-gray-100 border rounded`}\n        >\n            <div className=\"items-center flex\">\n                <input type=\"checkbox\" defaultChecked={false} onChange={() => handleCompleteChange(id)}/>\n                <ListText id={id} title={title} isEdit={isEdit} completed={completed} todoData={todoData} setTodoData={setTodoData}/>\n            </div>\n            <div className=\"items-center\">\n                <button className=\"px-4 py-2\" onClick={()=> {editToggle(id)}}>수정</button>\n                <button className=\"px-4 py-2 float-right\" onClick={() => handleClick(id)}>삭제</button>\n                \n            </div>\n        </div>\n    )\n});\n\nexport default List"]},"metadata":{},"sourceType":"module"}