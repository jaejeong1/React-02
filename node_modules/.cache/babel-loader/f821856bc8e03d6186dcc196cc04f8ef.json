{"ast":null,"code":"var _jsxFileName = \"/Users/jaejeongjang/Workspace/homework2/src/components/ListPanel.js\";\nimport React from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport List from './List';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lists = /*#__PURE__*/React.memo(_c = _ref => {\n  let {\n    todoData,\n    setTodoData,\n    handleClick\n  } = _ref;\n\n  const handleEnd = result => {\n    if (!result.destination) return;\n    const newTodoData = todoData;\n    const [reorderedItem] = newTodoData.splice(result.source.index, 1);\n    newTodoData.splice(result.destination.index, 0, reorderedItem);\n    setTodoData(newTodoData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"todo\",\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [todoData.map((data, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: data.id.toString(),\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(List, {\n              handleClick: handleClick,\n              id: data.id,\n              title: data.title,\n              completed: data.completed,\n              isEdit: data.isEdit,\n              todoData: todoData,\n              setTodoData: setTodoData,\n              provided: provided,\n              snapshot: snapshot\n            }, data.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 41\n            }, this)\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 33\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n});\n_c2 = Lists;\nexport default ListPanel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Lists$React.memo\");\n$RefreshReg$(_c2, \"Lists\");","map":{"version":3,"sources":["/Users/jaejeongjang/Workspace/homework2/src/components/ListPanel.js"],"names":["React","DragDropContext","Draggable","Droppable","List","Lists","memo","todoData","setTodoData","handleClick","handleEnd","result","destination","newTodoData","reorderedItem","splice","source","index","provided","snapshot","droppableProps","innerRef","map","data","id","toString","title","completed","isEdit","placeholder","ListPanel"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,qBAAtD;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,KAAK,gBAAGL,KAAK,CAACM,IAAN,MAAW,QAA4C;AAAA,MAA3C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA;AAAzB,GAA2C;;AACjE,QAAMC,SAAS,GAAIC,MAAD,IAAY;AAC1B,QAAI,CAACA,MAAM,CAACC,WAAZ,EAAyB;AAEzB,UAAMC,WAAW,GAAGN,QAApB;AAEA,UAAM,CAACO,aAAD,IAAkBD,WAAW,CAACE,MAAZ,CAAmBJ,MAAM,CAACK,MAAP,CAAcC,KAAjC,EAAwC,CAAxC,CAAxB;AAEAJ,IAAAA,WAAW,CAACE,MAAZ,CAAmBJ,MAAM,CAACC,WAAP,CAAmBK,KAAtC,EAA6C,CAA7C,EAAgDH,aAAhD;AACAN,IAAAA,WAAW,CAACK,WAAD,CAAX;AACH,GATD;;AAWA,sBACI;AAAA,2BACI,QAAC,eAAD;AAAiB,MAAA,SAAS,EAAEH,SAA5B;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAC,MAAvB;AAAA,kBACK,CAACQ,QAAD,EAAWC,QAAX,kBACG,oBAASD,QAAQ,CAACE,cAAlB;AAAkC,UAAA,GAAG,EAAEF,QAAQ,CAACG,QAAhD;AAAA,qBACKd,QAAQ,CAACe,GAAT,CAAa,CAACC,IAAD,EAAON,KAAP,kBACV,QAAC,SAAD;AAAyB,YAAA,WAAW,EAAEM,IAAI,CAACC,EAAL,CAAQC,QAAR,EAAtC;AAA0D,YAAA,KAAK,EAAER,KAAjE;AAAA,sBACK,CAACC,QAAD,EAAWC,QAAX,kBACG,QAAC,IAAD;AACI,cAAA,WAAW,EAAEV,WADjB;AAGI,cAAA,EAAE,EAAEc,IAAI,CAACC,EAHb;AAII,cAAA,KAAK,EAAED,IAAI,CAACG,KAJhB;AAKI,cAAA,SAAS,EAAEH,IAAI,CAACI,SALpB;AAMI,cAAA,MAAM,EAAEJ,IAAI,CAACK,MANjB;AAOI,cAAA,QAAQ,EAAErB,QAPd;AAQI,cAAA,WAAW,EAAEC,WARjB;AASI,cAAA,QAAQ,EAAEU,QATd;AAUI,cAAA,QAAQ,EAAEC;AAVd,eAESI,IAAI,CAACC,EAFd;AAAA;AAAA;AAAA;AAAA;AAFR,aAAgBD,IAAI,CAACC,EAArB;AAAA;AAAA;AAAA;AAAA,kBADH,CADL,EAmBKN,QAAQ,CAACW,WAnBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA3Ca,CAAd;MAAMxB,K;AA6CN,eAAeyB,SAAf","sourcesContent":["import React from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport List from './List';\n\nconst Lists = React.memo(({ todoData, setTodoData, handleClick }) => {\n    const handleEnd = (result) => {\n        if (!result.destination) return;\n\n        const newTodoData = todoData;\n\n        const [reorderedItem] = newTodoData.splice(result.source.index, 1);\n\n        newTodoData.splice(result.destination.index, 0, reorderedItem);\n        setTodoData(newTodoData);\n    }\n\n    return (\n        <div>\n            <DragDropContext onDragEnd={handleEnd}>\n                <Droppable droppableId=\"todo\">\n                    {(provided, snapshot) => (\n                        <div {...provided.droppableProps} ref={provided.innerRef}>\n                            {todoData.map((data, index) =>(\n                                <Draggable key={data.id} draggableId={data.id.toString()} index={index}>\n                                    {(provided, snapshot) => (\n                                        <List \n                                            handleClick={handleClick}\n                                            key={data.id}\n                                            id={data.id}\n                                            title={data.title}\n                                            completed={data.completed}\n                                            isEdit={data.isEdit}\n                                            todoData={todoData}\n                                            setTodoData={setTodoData}\n                                            provided={provided}\n                                            snapshot={snapshot}\n                                        />\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                </Droppable>\n            </DragDropContext>\n        </div>\n    )\n})\n\nexport default ListPanel"]},"metadata":{},"sourceType":"module"}